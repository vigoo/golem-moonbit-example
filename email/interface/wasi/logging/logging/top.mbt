// Generated by `wit-bindgen` 0.36.0. DO NOT EDIT!
/// A log level, describing a kind of message.
pub(all) enum Level {
      TRACE; DEBUG; INFO; WARN; ERROR; CRITICAL
} derive(Show)

pub fn ordinal(self : Level) -> Int {
      match self {
            TRACE => 0
            DEBUG => 1
            INFO => 2
            WARN => 3
            ERROR => 4
            CRITICAL => 5
      }
}

pub fn Level::from(self : Int) -> Level {
      match self {
            0 => TRACE
            1 => DEBUG
            2 => INFO
            3 => WARN
            4 => ERROR
            5 => CRITICAL
            _ => panic()
      }
}
/// Emit a log message.
///
/// A log message has a `level` describing what kind of message is being
/// sent, a context, which is an uninterpreted string meant to help
/// consumers group similar messages, and a string containing the message
/// text.
pub fn log(level : Level, context : String, message : String) -> Unit {

      wasmImportLog(level.ordinal(), @ffi.str2ptr(context), context.iter().count(), @ffi.str2ptr(message), message.iter().count());
      ignore(context)
      ignore(message)

}

